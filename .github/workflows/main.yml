#
# This is free software, lisence use MIT.
# 
name: Update-packages
on:
  push:
    paths:
      - '.github/workflows/main.yml'
  schedule:
    - cron: 0 17 * * *
  watch:
    types: started
  repository_dispatch:
  workflow_dispatch:
jobs:
  update:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0
    - name: Set git identity
      run : |
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        sudo timedatectl set-timezone "Asia/Shanghai"
    - name: Syn upstream
      run: |
        shopt -s extglob

        rm -rf !(autocore|README.md|default-settings)

        function git_clone() (
          git clone --depth 1 $1 $2 || true
        )

        function git_sparse_clone() (
          branch="$1" rurl="$2" localdir="$3" && shift 3
          git clone -b $branch --depth 1 --filter=blob:none --sparse $rurl $localdir
          cd $localdir
          git sparse-checkout init --cone
          git sparse-checkout set $@
          mv -n $@ ../
          cd ..
          rm -rf $localdir
          )

        function mvdir() {
        mv -n `find $1/* -maxdepth 0 -type d` ./
        rm -rf $1
        }
        
        svn export https://github.com/vernesong/OpenClash/trunk/luci-app-openclash
        
        svn export https://github.com/immortalwrt/immortalwrt/trunk/package/emortal
        mv emortal/autocore .
        rm -rf emortal

        svn export https://github.com/kiddin9/openwrt-packages/trunk/luci-app-filetransfer
        svn export https://github.com/coolsnowwolf/luci/trunk/libs/luci-lib-fs
        
        git_clone https://github.com/kenzok78/luci-app-fileassistant.git
        
    - name: packages
      run: |
        shopt -s extglob
        
        for ipk in $(ls -d applications/!(luci-app-rclone)/); do
        	if [[ $(ls $ipk/po | wc -l) -gt 3 ]]; then
            rm -rf $ipk
        	fi
        done
        
        rm -Rf */.git
    - name: Apply
      run: |
        git add .
        git commit -m "$(date +%Y-%m-%d" "%H:%M:%S)" || true
        git push
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      continue-on-error: true
      with:
        retain_days: 1
        keep_minimum_runs: 3
