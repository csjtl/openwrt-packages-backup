## This is a basic workflow to help you get started with Actions
#
#name: CI
#
## Controls when the workflow will run
#on:
#  # Triggers the workflow on push or pull request events but only for the main branch
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
#
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
#
## A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
#  # This workflow contains a single job called "build"
#  build:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v2
#
#      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: echo Hello, world!
#
#      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.

name: Merge-upstream
on:
  push:
    paths:
      - '.github/workflows/main.yml'
  watch:
    types: started
  repository_dispatch:

jobs:
  merge:
    runs-on: Ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0

    - name: Set git identity
      run : |
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        sudo timedatectl set-timezone "Asia/Shanghai"

    - name: Syn upstream
      run: |
        git rm -r --cache * >/dev/null 2>&1 &
        rm -rf `find ./* -maxdepth 0 -type d ! -name "diy"` >/dev/null 2>&1
        function git_clone() (
          git clone --depth 1 $1 $2 || true
        )
        function git_sparse_clone() (
          branch="$1" rurl="$2" localdir="$3" && shift 3
          git clone -b $branch --depth 1 --filter=blob:none --sparse $rurl $localdir
          cd $localdir
          git sparse-checkout init --cone
          git sparse-checkout set $@
          mv -n $@ ../
          cd ..
          rm -rf $localdir
          )
        function mvdir() {
        mv -n `find $1/* -maxdepth 0 -type d` ./
        rm -rf $1
        }
        deleteempty() {
          find ${1:-.} -mindepth 1 -maxdepth 1 -type d | while read -r dir
          do
          if [[ -z "$(find "$dir" -mindepth 1 -type f)" ]] >/dev/null
           then
          echo "$dir"
          rm -rf ${dir} 2>&- && echo "Empty, Deleted!" || echo "Delete error"
          fi
          if [ -d ${dir} ]
            then
          deleteempty "$dir"
          fi
          done
        }
        (
        git_clone https://github.com/kiddin9/my-packages && mvdir my-packages
        git_clone https://github.com/kiddin9/openwrt-bypass && mvdir openwrt-bypass
        git_clone https://github.com/kiddin9/luci-app-dnsfilter
        git_clone https://github.com/kiddin9/aria2
        git_clone https://github.com/kiddin9/luci-app-baidupcs-web
        git_clone https://github.com/kiddin9/luci-theme-edge
        git_clone https://github.com/kiddin9/qBittorrent-Enhanced-Edition
        git_clone https://github.com/kiddin9/autoshare && mvdir autoshare
        git_clone https://github.com/kiddin9/openwrt-openvpn && mvdir openwrt-openvpn
        git_clone https://github.com/kiddin9/luci-app-xlnetacc
        git_clone https://github.com/kiddin9/openwrt-amule-dlp && mvdir openwrt-amule-dlp
        git clone https://github.com/kiddin9/luci-app-wizard
        ) &
        (
        git_clone https://github.com/xiaorouji/openwrt-passwall
        git_clone https://github.com/Lienol/openwrt-package
        git_clone https://github.com/BoringCat/luci-app-mentohust
        git_clone https://github.com/KyleRicardo/MentoHUST-OpenWrt-ipk
        git_clone https://github.com/rufengsuixing/luci-app-autoipsetadder
        git_clone https://github.com/NateLol/luci-app-beardropper
        git_clone https://github.com/riverscn/openwrt-iptvhelper && mvdir openwrt-iptvhelper
        git_clone https://github.com/project-lede/luci-app-godproxy
        git_clone https://github.com/BoringCat/luci-app-minieap
        git_clone https://github.com/rufengsuixing/luci-app-onliner
        git_clone https://github.com/tty228/luci-app-serverchan
        git_clone https://github.com/4IceG/luci-app-sms-tool smstool && mvdir smstool
        git_clone https://github.com/rufengsuixing/luci-app-usb3disable
        git_clone https://github.com/silime/luci-app-xunlei
        git_clone https://github.com/ysc3839/luci-proto-minieap
        ) &
        (
        git_clone https://github.com/zzsj0928/luci-app-pushbot
        git_clone https://github.com/shanglanxin/luci-app-homebridge
        git_clone https://github.com/jerrykuku/luci-theme-argon
        git_clone https://github.com/jerrykuku/luci-app-argon-config
        git_clone https://github.com/jerrykuku/luci-app-vssr
        git_clone https://github.com/jerrykuku/luci-app-ttnode
        git_clone https://github.com/jefferymvp/luci-app-koolproxyR
        git_clone https://github.com/peter-tank/luci-app-dnscrypt-proxy2
        git_clone https://github.com/sirpdboy/luci-app-advanced
        git_clone https://github.com/sirpdboy/luci-app-netdata
        git_clone https://github.com/sirpdboy/luci-app-poweroffdevice
        git_clone https://github.com/sirpdboy/luci-app-autotimeset
        git_clone https://github.com/wolandmaster/luci-app-rtorrent
        git_clone https://github.com/jerrykuku/luci-app-jd-dailybonus
        git_clone https://github.com/NateLol/luci-app-oled
        ) &
        (
        git_clone https://github.com/destan19/OpenAppFilter && mvdir OpenAppFilter
        git_clone https://github.com/esirplayground/luci-app-poweroff
        git_clone https://github.com/lvqier/luci-app-dnsmasq-ipset
        git_clone https://github.com/walkingsky/luci-wifidog luci-app-wifidog
        git_clone https://github.com/peter-tank/luci-app-autorepeater
        git_clone https://github.com/CCnut/feed-netkeeper && mvdir feed-netkeeper
        git_clone https://github.com/brvphoenix/luci-app-wrtbwmon wrtbwmon1 && mvdir wrtbwmon1
        git_clone https://github.com/brvphoenix/wrtbwmon wrtbwmon2 && mvdir wrtbwmon2
        git_clone https://github.com/linkease/ddnsto-openwrt && mvdir ddnsto-openwrt
        git_clone https://github.com/sensec/luci-app-udp2raw
        git_clone https://github.com/LGA1150/openwrt-sysuh3c && mvdir openwrt-sysuh3c
        git_clone https://github.com/gdck/luci-app-cupsd cupsd1 && mv -n cupsd1/luci-app-cupsd cupsd1/cups/cups ./ ; rm -rf cupsd1
        ) 

        for ipk in $(ls applications); do
        	if [[ $ipk != "luci-app-transmission" && $(ls -l applications/$ipk/po | wc -l) -gt 3 ]]; then
        		rm -rf applications/$ipk
        	fi
        done
        
        deleteempty

    #- name: Delete duplicated packages
    #  run: |
    #    shopt -s extglob
    #    mv -n openwrt-passwall/* ./ ; rm -Rf openwrt-passwall
    #    mv -n applications/!(luci-app-turboacc|luci-app-vlmcsd) ./ ; rm -Rf applications
    #    mv -n ledelean/* ./ ; rm -Rf ledelean
    #    mv -n openwrt-package/* ./ ; rm -Rf openwrt-package
    #    cp -rf diy/.packages/* ./ || true
    #    rm -Rf */.git
    #    rm -Rf my-autocore
    #    rm -Rf my-default-settings
    #    mv -f mt/drivers mt-drivers && cp -rf mt/* ./ && rm -Rf mt
      
    - name: Apply
      run: |
        git add .
        git commit -m "$(date +%Y-%m-%d" "%H:%M:%S)" || true
        git reset --soft HEAD^
        git add .
        git commit -m "$(date +%Y-%m-%d" "%H:%M:%S)" || true
        git push

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      continue-on-error: true
      with:
        retain_days: 1
        keep_minimum_runs: 3
